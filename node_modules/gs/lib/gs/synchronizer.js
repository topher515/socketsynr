var events = require('events');

var clients = [];


exports.listen_and_forward = function(server_event_emitter,events) {
	for (j in events) {
		server_event_emitter.on(events[j], function() {
			msg = [event];
			for (i in arguments) {
				msg.push(arguments[i]);
			}
			for (i in clients) {
				clients[i].send(JSON.stringify({'event':msg}))
			}
		})
		
	}
}


var client_emitters = exports.client_emitters = {};

exports.listen = function(socket) {
	
	socket.on('connection', function(client) {
		
		client.on('disconnect', function() {
			delete client_emitters[client.sessionId];
		});
		
		client_emitters[client.sessionId] = listen_client(client);
	})
}

var listen_client = function(client) {
	// Re-emit 'message' events with the 'event' object as Node.js events
	var emitter = events.EventEmitter()
	client.on('message',function(msg) {
		jso = JSON.parse(msg);
		if (jso.event) {
			sync_emitter.emit.apply(null,jso.event)
		}
	})
	return emitter;
}


exports.clients = client_emitters;