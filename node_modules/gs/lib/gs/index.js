var sys = require('sys'),
	events = require('events'),
	thinger = require('thinger');

var QuadTree = require('./quadtree').QuadTree;

World = function(name) {
	
	thinger.add(this);
	this.name = name;
	
	this.critters = new QuadTree(-1000000,-1000000,1000000,1000000);
	this.critter_loc_by_id = {};
	this.critter_by_id = {};
	
	this.ground = new QuadTree(-1000000,-1000000,1000000,1000000);

	events.EventEmitter.call(this)
}
sys.inherits(World,events.EventEmitter);

World.prototype.ground_at = function(x,y) {
	return this.ground.get(x,y);
}

World.prototype.critter_at = function(x,y) {
	return this.critters.get(x,y);
}

World.prototype.add_critter = function(x,y,critter) {
	critter.world = this;
	
	this.critter_by_id[critter.id] = critter;
	
	this.critters.set(x,y,critter);
	this.critter_loc_by_id[critter.id] = [x,y];
	
	this.emit('critter_add',x,y,critter)
}

World.prototype.move_critter = function(x,y,to_x,to_y) {
	c = this.critters.remove(x,y)
	
	this.critter_loc_by_id[c.id] = [to_x,to_y]
	this.critters.set(to_x,to_y,c);
	
	this.emit('critter_set',to_x,to_y,critter)
}

World.prototype.remove_critter = function(x,y) {
	c = this.critters.remove(x,y);
	delete this.critter_by_id[c.id];
	delete this.critter_loc_by_id[c.id];
	
	this.emit('critter_remove',x,y)
}


Ground = function() {
	this.passable = true;
}


Critter = function(name) {
	
	thinger.add(this)
	
	this.name = name;
	this.world = null;
}

Critter.prototype.up = function() {
	this.world.move_critter(this.x,this.y,this.x,this.y+1)
}

Critter.prototype.right = function() {
	this.world.move_critter(this.x,this.y,this.x+1,this.y)
}

Critter.prototype.down = function() {
	this.world.move_critter(this.x,this.y,this.x,this.y-1)
}

Critter.prototype.left = function() {
	this.world.move_critter(this.x,this.y,this.x-1,this.y)
}



Player = function(name) {
	Critter.call(this);
}
sys.inherits(Player, Critter)




/* Node exports */
exports.World = World;
exports.Player = Player;
